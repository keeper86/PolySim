name: Website CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    checks:
        name: Run formatting, linting, unit tests and build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v5
            - name: Set up Node.js
              uses: actions/setup-node@v5
              with:
                  node-version: '24'
            - name: Cache npm
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-cache-
            - name: Install dependencies
              run: npm ci
            - name: Check formatting
              run: npm run format:check
            - name: Lint
              run: npm run lint:check
            - name: Run unit tests
              run: npm run test
            - name: Build
              run: npm run build

    e2e:
        name: Run end-to-end tests
        runs-on: ubuntu-latest
        needs: checks
        if: (github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main')
        steps:
            - name: Checkout code
              uses: actions/checkout@v5
            - name: Copy development env file
              run: cp .env.example.development .env
            - name: Set up Node.js
              uses: actions/setup-node@v5
              with:
                  node-version: '24'
            - name: Cache npm
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-cache-
            - name: Cache Playwright browsers
              uses: actions/cache@v4
              with:
                  path: ~/.cache/ms-playwright
                  key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-playwright-
            - name: Install dependencies
              run: npm ci
            - name: Start Keycloak and DB with Docker Compose
              run: |
                  docker compose -f docker-compose.development.yaml up -d
            - name: Wait for DB to be ready
              run: npx wait-on --timeout=60000 tcp:localhost:5432
            - name: Start app locally
              run: |
                  npm run dev &
            - name: Wait for app to be ready
              run: |
                  npx wait-on --timeout=60000 http://localhost:3000/api/health
            - name: Print container logs on failure
              if: failure()
              run: docker compose -f docker-compose.development.yaml logs && printenv
            - name: Wait for Keycloak to be ready
              run: npx wait-on --timeout=60000 http://localhost:8080/realms/polysim/.well-known/openid-configuration
            - name: Run Playwright tests
              run: |
                  npm run test:e2e
            - name: Upload Playwright report on failure
              if: failure()
              uses: actions/upload-artifact@v4
              with:
                  name: playwright-report
                  path: playwright-report/
                  retention-days: 7
            - name: Upload Playwright test results on failure
              if: failure()
              uses: actions/upload-artifact@v4
              with:
                  name: playwright-test-results
                  path: test-results/
                  retention-days: 7
            - name: Stop all containers
              if: always()
              run: docker compose -f docker-compose.development.yaml down
