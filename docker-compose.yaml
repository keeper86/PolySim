services:
    caddy:
        image: caddy:alpine
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile
            - caddy_data:/data
            - caddy_config:/config
        environment:
            - CADDY_DOMAIN=localhost
        depends_on:
            - app

    app:
        build:
            context: .
            target: runner
        environment:
            DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
            NEXT_PUBLIC_API_BASE_URL: http://localhost/api/trpc
            NODE_ENV: production
            LOG_LEVEL: warn
        depends_on:
            db:
                condition: service_healthy
            migrations:
                condition: service_completed_successfully

    migrations:
        build:
            context: .
            target: migrator
        environment:
            DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
            NODE_ENV: production
        depends_on:
            db:
                condition: service_healthy
        restart: 'no'

    db:
        image: postgres:15-alpine
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
            interval: 10s
            timeout: 3s
            retries: 10

volumes:
    postgres_data:
    caddy_data:
    caddy_config:
